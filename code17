package com.example.logging;

import ch.qos.logback.core.rolling.TriggeringPolicyBase;
import ch.qos.logback.core.rolling.RollingFileAppender;
import ch.qos.logback.core.spi.ContextAwareBase;

import java.io.File;
import java.time.LocalDateTime;
import java.time.LocalTime;

public class TimeOfDayTriggeringPolicy<E> extends TriggeringPolicyBase<E> {

    private LocalDateTime nextTriggerTime;

    @Override
    public void start() {
        computeNextTriggerTime();
        super.start();
    }

    @Override
    public boolean isTriggeringEvent(File activeFile, E event) {
        LocalDateTime now = LocalDateTime.now();
        if (now.isAfter(nextTriggerTime)) {
            computeNextTriggerTime();
            return true;
        }
        return false;
    }

    private void computeNextTriggerTime() {
        LocalDateTime now = LocalDateTime.now();
        LocalDateTime candidate = now.with(LocalTime.of(5, 55));
        if (!now.isBefore(candidate)) {
            candidate = candidate.plusDays(1);
        }
        this.nextTriggerTime = candidate;
    }
}